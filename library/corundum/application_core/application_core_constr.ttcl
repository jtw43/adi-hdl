###############################################################################
## Copyright (C) 2025 Analog Devices, Inc. All rights reserved.
### SPDX short identifier: ADIBSD
###############################################################################

<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileName [ttcl_add $ComponentName "_constr"] :>
<: setFileExtension ".xdc" :>
<: setFileProcessingOrder late :>

set_property ASYNC_REG TRUE \
  [get_cells -hier {*cdc_sync_stage1_reg*}] \
  [get_cells -hier {*cdc_sync_stage2_reg*}]

# get the base clocks into groups
set corundum_clk_ports_base {clk}
set input_clk_ports_base {input_clk}
set output_clk_ports_base {output_clk}

# get the base clocks into objects
set corundum_clk [get_clocks -of_objects [get_ports $corundum_clk_ports_base]]
set input_clk [get_clocks -of_objects [get_ports $input_clk_ports_base]]
set output_clk [get_clocks -of_objects [get_ports $output_clk_ports_base]]

# set the groups in usable ports groups with the base
set corundum_input_clk_port "$corundum_clk_ports_base $input_clk_ports_base"
set corundum_output_clk_port "$corundum_clk_ports_base $input_clk_ports_base"

# get the all of the clock group objects
set corundum_input_clk [get_clocks -of_objects [get_ports $corundum_input_clk_port]]
set corundum_output_clk [get_clocks -of_objects [get_ports $corundum_output_clk_port]]

###########################################
# constraints
###########################################

# application TX side
###########################################

# false paths

set_false_path \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/sync_bits_run_packetizer/cdc_sync_stage1_reg* && IS_SEQUENTIAL}]

set_false_path \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/packetizer_inst/sync_bits_input_enable_ff/cdc_sync_stage1_reg* && IS_SEQUENTIAL}]

# max delay, limit delay

set_max_delay -datapath_only \
  -from $input_clk \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/packetizer_inst/input_enable_cdc* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $input_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_tx_inst/packetizer_inst/input_enable* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/packetizer_inst/input_enable_cdc* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_input_clk]

# gray coding constraints

set_max_delay -datapath_only \
  -from $input_clk \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $input_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage0_reg* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_input_clk]

set_max_delay -datapath_only \
  -from $corundum_clk \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage0_reg* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_tx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_input_clk]

# application RX side
###########################################

# false paths

set_false_path \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/rx_arbiter/sync_bits_output_enable_ff/cdc_sync_stage1_reg* && IS_SEQUENTIAL}]

# max delay, limit delay

set_max_delay -datapath_only \
  -from $output_clk \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/rx_arbiter/output_enable_cdc* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $output_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_rx_inst/rx_arbiter/output_enable* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/rx_arbiter/output_enable_cdc* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_output_clk]

# gray coding constraints

set_max_delay -datapath_only \
  -from $corundum_clk \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage0_reg* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_waddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_output_clk]

set_max_delay -datapath_only \
  -from $output_clk \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $output_clk]
set_bus_skew \
  -from [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage0_reg* && IS_SEQUENTIAL}] \
  -to [get_cells -hier -filter {NAME =~ *application_rx_inst/*cdc_scale_fifo/*i_raddr_sync_gray/cdc_sync_stage1_reg* && IS_SEQUENTIAL}] \
  [get_property -min PERIOD $corundum_output_clk]
